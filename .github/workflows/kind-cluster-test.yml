name: Kind Cluster Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      image_reference:
        description: 'Full image reference for the job (e.g., quay.io/crio/artifact:v2)'
        required: false
        default: 'quay.io/crio/artifact:v2'
        type: string

jobs:
  test-kind-cluster:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Kind following instruction from website (latest at the time of writing)
      run: |
        # For AMD64 / x86_64
        [ $(uname -m) = x86_64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.29.0/kind-linux-amd64
        # For ARM64
        [ $(uname -m) = aarch64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.29.0/kind-linux-arm64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind
        
    - name: Create Kind cluster
      run: |
        kind create cluster --image ghcr.io/tarilabs/demo20250808-kind-crio-fromexistingnodeimg/kindnode-crio:v1.33-amd64 --config kind-config.yml --verbosity 2
        
    - name: Wait for cluster to be ready
      run: |
        kubectl wait --for=condition=Ready nodes --all --timeout=300s
        
    # - name: Apply images-volume-subpath
    #   run: |
    #     kubectl apply -f images-volume-subpath.yaml
        
    # - name: Wait for pod to be ready
    #   run: |
    #     kubectl wait --for=condition=Ready pod/image-volume --timeout=300s
        
    - name: Apply file-iterator-job with custom image
      run: |
        # Get image reference with default
        IMAGE_REFERENCE="${{ github.event.inputs.image_reference || 'quay.io/crio/artifact:v2' }}"
        
        echo "Applying job with image: $IMAGE_REFERENCE"
        
        # Use yq to update the image reference in the job manifest
        yq eval ".spec.template.spec.volumes[0].image.reference = \"$IMAGE_REFERENCE\"" file-iterator-job.yaml | kubectl apply -f -
        kubectl describe job file-iterator-job
        
    - name: Wait for job to complete
      run: |
        kubectl wait --for=condition=complete job/file-iterator-job --timeout=600s
        
    - name: Display job status
      run: |
        echo "=== Job Status ==="
        kubectl get jobs
        kubectl describe job file-iterator-job
        
    - name: Display job logs
      run: |
        echo "=== Job Logs ==="
        kubectl logs job/file-iterator-job
        
    - name: Display job logs on failure
      if: failure()
      run: |
        echo "=== Job Logs (on failure) ==="
        kubectl events
        kubectl logs job/file-iterator-job
        kubectl logs job/file-iterator-job --previous || true
        
    - name: Cleanup Kind cluster
      if: always()
      run: |
        kind delete cluster
